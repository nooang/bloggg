<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog.member.dao.MemberDAO">
	<select id="getEmailCount" parameterType="string" resultType="_int">
		SELECT COUNT(1)
		  FROM MEMBERS
		 WHERE EMAIL = #{email}
	</select>
	
	<insert id="createNewMember" parameterType="com.example.blog.member.vo.MemberVO">
		INSERT INTO MEMBERS (
			  EMAIL
			, NAME
			, NICK_NAME
			, PASSWORD
			, SALT
			, BLOCK_YN
			, LOGIN_CNT
			, LATEST_LOGIN_SUCCESS_DATE
			, LATEST_LOGIN_FAIL_DATE
			, REGIST_DATE)
			VALUES (
			  #{email}
			, #{name}
			, #{nickName}
			, #{password}
			, #{salt}
			, 'N'
			, 0
			, NULL
			, NULL
			, SYSDATE)
	</insert>
	
	<select id="getSalt" parameterType="string" resultType="string">
		SELECT SALT 
		  FROM MEMBERS
		 WHERE EMAIL = #{email}
	</select>
	
	<select id="getMember" parameterType="com.example.blog.member.vo.MemberVO" resultType="com.example.blog.member.vo.MemberVO">
		SELECT EMAIL
		     , NAME
		     , NICK_NAME
		     , PASSWORD
		     , SALT
		     , BLOCK_YN
		     , LOGIN_CNT
		     , TO_CHAR(LATEST_LOGIN_SUCCESS_DATE, 'YYYY-MM-DD') LATEST_LOGIN_SUCCESS_DATE
		     , TO_CHAR(LATEST_LOGIN_FAIL_DATE, 'YYYY-MM-DD') LATEST_LOGIN_FAIL_DATE
		     , TO_CHAR(REGIST_DATE, 'YYYY-MM-DD') REGIST_DATE
		     , LATEST_ACCESS_IP
		  FROM MEMBERS
		 WHERE EMAIL = #{email}
		   AND PASSWORD = #{password}
	</select>
	
	<update id="successLogin" parameterType="com.example.blog.member.vo.MemberVO">
		UPDATE MEMBERS
		   SET LATEST_LOGIN_SUCCESS_DATE = SYSDATE
		     , LOGIN_CNT = 0
		     , LATEST_ACCESS_IP = #{latestAccessIp}
		 WHERE EMAIL = #{email}
	</update>
	
	<update id="failLogin" parameterType="com.example.blog.member.vo.MemberVO">
		UPDATE MEMBERS
		   SET LATEST_LOGIN_FAIL_DATE = SYSDATE
		     , LOGIN_CNT = LOGIN_CNT + 1
		     , LATEST_ACCESS_IP = #{latestAccessIp}
		 WHERE EMAIL = #{email}
	</update>
	
	<update id="blockMember" parameterType="string">
		UPDATE MEMBERS
		   SET BLOCK_YN = 'Y'
		 WHERE EMAIL = #{email}
		   AND LOGIN_CNT >= 3
	</update>
	
	<delete id="deleteMe" parameterType="string">
		DELETE 
		  FROM MEMBERS
		 WHERE EMAIL = #{email}
	</delete>
</mapper>